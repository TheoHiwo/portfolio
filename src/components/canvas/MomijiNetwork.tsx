/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    sol: THREE.Mesh;
    Screen: THREE.Mesh;
    Mouse: THREE.Mesh;
    Cube001: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

export default function MomijiNetwork(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/momiji_network_diorama.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sol.geometry}
        material={materials.Material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Screen.geometry}
        material={materials.Material}
        position={[0, 4.71, -1.36]}
        rotation={[-0.19, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mouse.geometry}
        material={materials.Material}
        position={[6.1, 0.69, 3.49]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={materials.Material}
        position={[-3.23, 0.34, 5.29]}
        rotation={[-0.08, -0.28, -0.07]}
      />
    </group>
  );
}

useGLTF.preload("/momiji_network_diorama.glb");
